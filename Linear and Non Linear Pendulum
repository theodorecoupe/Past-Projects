#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Feb 23 18:18:42 2022

@author: theodorecoupe
"""


import numpy as np
import matplotlib.pylab as plt
nums = np.arange(0,1000.0,10)
z=np.arange(0, 1, 1)


k = 0.0
phi =  0.66667
A = 0.0
g = 1
l = 1
theta = 0.0
omega = 1.0
t = 0.0
dt = 0.01
nsteps = 0.0
nstepslist = [0]
thetalist = [0.0]
omegalist = [1.0]


def f(theta, omega, t):
    return -(g/l)*np.sin(theta) - k*omega + A*np.cos(phi*t)


while nsteps <= 1000:
    k1a = dt * omega
    k1b = dt * f(theta, omega, t)
    k2a = dt * (omega + k1b)
    k2b = dt * f(theta + k1a, omega + k1b, t + dt)
    theta = theta + (k1a + k2a) / 2
    omega = omega + (k1b + k2b ) / 2
    t = t + dt
    nsteps += 1
    nstepslist.append(nsteps)
    thetalist.append(theta)
    omegalist.append(omega)
 
amplitudefromequationsix = [i * np.sin(((g**0.5)*t)/(l**0.5 + np.pi*0.5)) for i in thetalist]  
    
   
fig = plt.figure()
plt.plot (nums, nums*0)
plt.plot (z*0, z)
plt.plot (nstepslist, thetalist)
plt.title("Theta vs. Time")
plt.xlabel("Time (s)")
plt.ylabel("Angle (r)")
plt.show



figomega = plt.figure()
plt.plot (nums, nums*0)
plt.plot (nstepslist, omegalist)
plt.plot (z*0, z)
plt.title("Omega vs. Time")
plt.xlabel("Time (s)")
plt.ylabel("Angular Speed (m/s)")
plt.show



print(f(theta, omega, t))

nums = np.arange(0,5000.0,10)
z=np.arange(0, 1, 1)

iteration_num = 0
transient = 5000
k = 0.5
phi =  0.66667
A = 1.5
g = 1
l = 1
theta = 3.0
omega = 0.0
t = 0.0
dt = 0.01
nsteps = 0.0
nstepslist = [0]
thetalist = [3.0]
omegalist = [0.0]


def f(theta, omega, t):
    return - np.sin(theta) - omega * k + A * np.cos(phi*t)
    

while transient > iteration_num:
    if (np.abs(theta) > np.pi):
        theta -= 2 * np.pi * np.abs(theta) / theta
    k1a = dt * omega
    k1b = dt * f(theta, omega, t)
    k2a = dt * (omega + k1b/2)
    k2b = dt * f(theta + k1a/2, omega + k1b/2, t + dt/2)
    k3a = dt * (omega + k2b/2)
    k3b = dt * f(theta + k2a/2, omega + k2b/2, t + dt/2)
    k4a = dt * (omega + k3b)
    k4b = dt * f(theta + k3a, omega + k3b, t + dt)
    theta = theta + (k1a + 2*k2a + 2*k3a + k4a) / 6
    omega = omega + (k1b + 2*k2b + 2*k3b + k4b) / 6
    t = t + dt
    nsteps += 1
    nstepslist.append(nsteps)
    thetalist.append(theta)
    omegalist.append(omega)
    iteration_num += 1
 
amplitudefromequationsix = [i * np.sin(((g**0.5)*t)/(l**0.5 + np.pi*0.5)) for i in thetalist]  
    
   
fig = plt.figure()
plt.plot (nums, nums*0)
plt.plot (z*0, z)
plt.plot (nstepslist, thetalist)
plt.title("Theta vs. Time")
plt.xlabel("Time (s)")
plt.ylabel("Angle (r)")
plt.show



figomega = plt.figure()
plt.plot (nums, nums*0)
plt.plot (nstepslist, omegalist)
plt.plot (z*0, z)
plt.title("Omega vs. Time")
plt.xlabel("Time (s)")
plt.ylabel("Angular Speed (m/s)")
plt.show


figphase = plt.figure()
plt.plot(thetalist, omegalist)
plt.title("Phase Porttait")
plt.xlabel("Theta")
plt.ylabel("Omega")
plt.show

print(f(theta, omega, t))

